{"version":3,"sources":["App/Header/Header.js","App/Home/Home.js","App/Custom/Custom.js","App/Modal/Modal.js","App/Game/Square/Square.js","App/Game/Player/Player.js","App/Game/Player/bots/Brandom.js","App/Game/Player/Bot.js","App/Game/Game.js","App/App.js","index.js"],"names":["Header","className","href","Home","React","Component","Custom","props","state","rows","cols","sequence","players","name","type","symbol","that","this","maxLength","value","onChange","e","target","replace","setState","JSON","stringify","Modal","style","top","display","children","Square","onClick","cursor","Player","bot","Brandom","game","key","availableSquares","getAvailableSquares","length","Math","floor","random","Game","parseInt","max","document","documentElement","setProperty","min","playersObj","parse","entries","i","playerObj","push","squares","getMatrix","running","hasWinner","winner","turn","showModal","isBot","setTimeout","square","play","markSquare","rowIndex","colIndex","Array","j","slice","arr","result","findSequenceInArray","getRow","getCol","getCrescentDiagonal","getDecrescentDiagonal","gameState","calculateGameState","handleSquareClick","getSymbol","squaresElements","renderSquare","playerIndex","playerButtonStyles","backgroundColor","color","getName","playerButtons","renderPlayerButton","renderAllSquares","renderAllPlayerButtons","reset","getGameStateMessage","App","url","URL","window","location","page","searchParams","get","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d0b542cf.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <header className=\"Header\">\n            <h1><a href=\"?\">RATTT</a></h1>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './Home.css';\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div className=\"Home\">\n                <a href={\"?p=game\"}>Classic</a>\n                <a href={\"?p=custom\"}>Custom</a>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Custom.css';\n\nexport default class Custom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: 3,\n            cols: 3,\n            sequence: 3,\n            players: [\n                {\n                    name: \"Player 1\",\n                    type: \"Human\",\n                    symbol: \"X\"\n                }, {\n                    name: \"Player 2\",\n                    type: \"Human\",\n                    symbol: \"O\"\n                },\n            ]\n        };\n    }\n\n    render() {\n        const that = this;\n        return (\n            <div className=\"Custom\">\n                <h2>Custom game</h2>\n                <form>\n                    <h3>{this.state.players[0].name || \"Player 1\"}</h3>\n                    <label>Name: <input type=\"name\" maxLength=\"16\" value={this.state.players[0].name} onChange={e => { const players = that.state.players; players[0].name = e.target.value.replace('&', ''); that.setState({players}); }} /></label>\n                    <label>Type: \n                        <select value={this.state.players[0].type} onChange={e => { const players = that.state.players; players[0].type = e.target.value; that.setState({players}); }}>\n                            <option value=\"Human\">Human</option>\n                            <option value=\"Brandom\">Brandom</option>\n                        </select>\n                    </label>\n                    <label>Symbol: <input type=\"name\" maxLength=\"1\" value={this.state.players[0].symbol} onChange={e => { const players = that.state.players; players[0].symbol = e.target.value.replace('&', ''); that.setState({players}); }} /></label>\n                </form>\n                <form>\n                <h3>{this.state.players[1].name || \"Player 2\"}</h3>\n                    <label>Name: <input type=\"name\" maxLength=\"16\" value={this.state.players[1].name} onChange={e => { const players = that.state.players; players[1].name = e.target.value.replace('&', ''); that.setState({players}); }} /></label>\n                    <label>Type: \n                        <select value={this.state.players[1].type} onChange={e => { const players = that.state.players; players[1].type = e.target.value; that.setState({players}); }}>\n                            <option value=\"Human\">Human</option>\n                            <option value=\"Brandom\">Brandom</option>\n                        </select>\n                    </label>\n                    <label>Symbol: <input type=\"name\" maxLength=\"1\" value={this.state.players[1].symbol} onChange={e => { const players = that.state.players; players[1].symbol = e.target.value.replace('&', ''); that.setState({players}); }} /></label>\n                </form>\n                <form>\n                    <h3>Board</h3>\n                    <label>Rows: <input type=\"number\" value={this.state.rows} onChange={e => that.setState({rows: e.target.value})}/></label>\n                    <label>Columns: <input type=\"number\" value={this.state.cols} onChange={e => that.setState({cols: e.target.value})} /></label>\n                    <label>Sequence to win: <input type=\"number\" value={this.state.sequence} onChange={e => that.setState({sequence: e.target.value})} /></label>\n                </form>\n                <br />\n                <a href={\"?p=game&rows=\" + this.state.rows + \"&cols=\" + this.state.cols + \"&seq=\" + this.state.sequence + \"&players=\" + JSON.stringify(this.state.players)}>Play</a>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Modal.css';\n\nexport default class Modal extends React.Component {\n    render() {\n        return (\n            <div className=\"Modal\"\n                    style={{\n                        top: this.props.display ? \"30%\" : \"-45%\"\n                    }}>\n                <p>{this.props.children}</p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Square.css';\n\nexport default class Square extends React.Component {\n    render() {\n        return (\n            <div className=\"Square\"\n                    onClick={() => this.props.onClick()}\n                    style={{ cursor: this.props.cursor }}>\n                <p>{ this.props.value }</p>\n            </div>\n        );\n    }\n}","export default class Player {\n    constructor(symbol, name = \"Player\") {\n        this.symbol = symbol;\n        this.name = name;\n        this.bot = false;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    getSymbol() {\n        return this.symbol;\n    }\n\n    setSymbol(symbol) {\n        this.symbol = symbol;\n    }\n\n    isBot() {\n        return this.bot;\n    }\n\n    setBot(bot) {\n        this.bot = bot;\n    }\n}","import Bot from '../Bot';\n\nexport default class Brandom extends Bot {\n    constructor(game, key, symbol, name = \"Brandom\") {\n        super(game, key, symbol, name);\n    }\n\n    play() {\n        const availableSquares = this.game.getAvailableSquares();\n        return availableSquares.length ?\n            availableSquares[Math.floor(Math.random() * availableSquares.length)] :\n            null;\n    }\n}","import Player from './Player';\n\nexport default class Bot extends Player {\n    constructor(game, key, symbol, name = \"Bot\") {\n        super(symbol, name);\n        this.bot = true;\n        this.game = game;\n        this.key = key;\n    }\n\n    getGame() {\n        return this.game;\n    }\n\n    setGame(game) {\n        this.game = game;\n    }\n\n    getKey() {\n        return this.key;\n    }\n\n    setKey(key) {\n        this.key = key\n    }\n}","import React from 'react';\nimport './Game.css';\nimport Modal from '../Modal/Modal';\nimport Square from './Square/Square';\nimport Player from './Player/Player';\nimport Brandom from './Player/bots/Brandom';\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rows = parseInt(this.props.rows) || 3;\n        this.cols = parseInt(this.props.cols) || this.rows;\n        this.sequence = parseInt(this.props.sequence) || Math.max(this.rows, this.cols);\n\n        document.documentElement.style.setProperty(\"--rows\", this.rows);\n        document.documentElement.style.setProperty(\"--cols\", this.cols);\n        document.documentElement.style.setProperty(\"--max\", Math.max(this.rows, this.cols));\n        document.documentElement.style.setProperty(\"--rows-relation\", Math.min(1, this.rows / this.cols));\n        document.documentElement.style.setProperty(\"--cols-relation\", Math.min(1, this.cols / this.rows));\n\n        const playersObj = JSON.parse(this.props.players);\n        if(playersObj && playersObj.length > 1) {\n            this.players = [];\n\n            for(const [i, playerObj] of playersObj.entries()) {\n                if(!playerObj.name) playerObj.name = \"Player \" + (i + 1);\n                if(!playerObj.symbol) playerObj.symbol = (i + 1) % 10;\n                switch(playerObj.type) {\n                    case \"Brandom\": this.players.push(new Brandom(this, i, playerObj.symbol, playerObj.name)); break;\n                    default: this.players.push(new Player(playerObj.symbol, playerObj.name));\n                }\n            }\n        } else this.players = [new Player(\"X\", \"Player 1\"), new Player(\"O\", \"Player 2\")];\n\n        const squares = this.getMatrix();\n\n        this.state = { squares, running: true, hasWinner: false, winner: null, turn: 0, showModal: false };\n\n        if(this.players[0].isBot()) {\n            setTimeout(() => {\n                const square = this.players[0].play();\n                this.markSquare(square.rowIndex, square.colIndex);\n            }, 100);\n        }\n    }\n\n    reset() {\n        const squares = this.getMatrix();\n        this.setState({ squares, running: true, hasWinner: false, winner: null, turn: 0 });\n\n        if(this.players[0].isBot()) {\n            setTimeout(() => {\n                const square = this.players[0].play();\n                this.markSquare(square.rowIndex, square.colIndex);\n            }, 100);\n        }\n    }\n\n    getMatrix() {\n        const squares = Array(this.rows);\n        for(let i = 0; i < squares.length; i++) {\n            squares[i] = Array(this.cols);\n            for(let j = 0; j < squares[i].length; j++)\n                squares[i][j] = -1;\n        }\n        return squares;\n    }\n\n    getAvailableSquares() {\n        const availableSquares = [];\n        for(let i = 0; i < this.rows; i++) {\n            for(let j = 0; j < this.cols; j++) {\n                if(this.state.squares[i][j] === -1) {\n                    availableSquares.push({ rowIndex: i, colIndex: j });\n                }\n            }\n        }\n        return availableSquares;\n    }\n\n    getRow(rowIndex) {\n        return this.state.squares[rowIndex].slice();\n    }\n\n    getCol(colIndex) {\n        const arr = [];\n        for(let i = 0; i < this.rows; i++)\n            arr.push(this.state.squares[i][colIndex]);\n        return arr;\n    }\n\n    getCrescentDiagonal(rowIndex, colIndex) {\n        const arr = [];\n        for(let i = rowIndex, j = colIndex; i >= 0 && j < this.cols; i--, j++)\n            arr.push(this.state.squares[i][j]);\n        return arr;\n    }\n\n    getDecrescentDiagonal(rowIndex, colIndex) {\n        const arr = [];\n        for(let i = rowIndex, j = colIndex; i < this.rows && j < this.cols; i++, j++)\n            arr.push(this.state.squares[i][j]);\n        return arr;\n    }\n\n    findSequenceInArray(arr) {\n        let sequence = 1;\n        for(let i = 1; i < arr.length; i++) {\n            if(arr[i] === arr[i - 1] && arr[i] !== -1) {\n                if(++sequence === this.sequence) return { hasWinner: true, winner: arr[i] };\n            } else sequence = 1;\n        }\n        return { hasWinner: false };\n    }\n\n    calculateGameState() {\n        for(let i = 0; i < this.rows; i++) {\n            const result = this.findSequenceInArray(this.getRow(i));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n        for(let i = 0; i < this.cols; i++) {\n            const result = this.findSequenceInArray(this.getCol(i));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n\n        for(let i = this.sequence - 1; i < this.rows; i++) {\n            const result = this.findSequenceInArray(this.getCrescentDiagonal(i, 0));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n\n        for(let i = 1; i <= this.cols - this.sequence; i++) {\n            const result = this.findSequenceInArray(this.getCrescentDiagonal(this.rows - 1, i));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n\n        for(let i = 0; i <= this.rows - this.sequence; i++) {\n            const result = this.findSequenceInArray(this.getDecrescentDiagonal(i, 0));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n\n        for(let i = 1; i <= this.cols - this.sequence; i++) {\n            const result = this.findSequenceInArray(this.getDecrescentDiagonal(0, i));\n            if(result.hasWinner) return { running: false, ...result };\n        }\n\n        for(let i = 0; i < this.rows; i++) {\n            for(let j = 0; j < this.cols; j++) {\n                if(this.state.squares[i][j] === -1) return { running: true };\n            }\n        }\n        \n        return { running: false, hasWinner: false };\n    }\n\n    getGameStateMessage() {\n        if(this.state.running) {\n            return this.players[this.state.turn].name + \" plays\";\n        } else if(this.state.hasWinner) {\n            return this.players[this.state.winner].name + \" wins!\";\n        } else {\n            return \"Draw!\";\n        }\n    }\n\n    markSquare(i, j) {\n        if(!this.state.running || this.state.squares[i][j] !== -1) return;\n\n        const squares = this.state.squares.slice();\n        let turn;\n        squares[i][j] = turn = this.state.turn;\n        const gameState = this.calculateGameState();\n\n        if(gameState.running)\n            turn = this.state.turn < this.players.length - 1 ? this.state.turn + 1 : 0;\n        else if(!gameState.hasWinner)\n            turn = -1;\n\n        this.setState({ squares, turn, ...gameState });\n        this.setState({ showModal: !gameState.running });\n\n        if(gameState.running && this.players[turn].isBot()) {\n            setTimeout(() => {\n                const square = this.players[turn].play();\n                this.markSquare(square.rowIndex, square.colIndex);\n            }, 100);\n        }\n    }\n\n    handleSquareClick(i, j) {\n        if(this.state.running && this.state.squares[i][j] === -1 && !this.players[this.state.turn].isBot())\n            this.markSquare(i, j);\n    }\n  \n    renderSquare(i, j) {\n        return (\n            <Square\n                key={i * this.cols + j}\n                onClick={() => this.handleSquareClick(i, j)}\n                value={this.state.squares[i][j] !== -1 ? this.players[this.state.squares[i][j]].getSymbol() : \"\"}\n                cursor={!this.state.running || this.state.squares[i][j] !== -1 ? \"default\" : \"pointer\"}\n            />\n        );\n    }\n    \n    renderAllSquares() {\n        const squaresElements = [];\n        for(let i = 0; i < this.rows; i++)\n            for(let j = 0; j < this.cols; j++)\n                squaresElements.push(this.renderSquare(i, j));\n        return squaresElements;\n    }\n\n    renderPlayerButton(playerIndex) {\n        let playerButtonStyles = {};\n        if(this.state.turn === playerIndex)\n            playerButtonStyles = { backgroundColor: \"#00aaff\", color: \"white\" };\n        return (\n            <button key={playerIndex} style={playerButtonStyles}>\n                { this.players[playerIndex].getName() }\n            </button>\n        )\n    }\n\n    renderAllPlayerButtons() {\n        const playerButtons = [];\n        for(let i = 0; i < this.players.length; i++) {\n            playerButtons.push(this.renderPlayerButton(i));\n        }\n        return playerButtons;\n    }\n\n    render() {\n        return (\n            <div className=\"Game\">\n                <div className=\"Board\">\n                    { this.renderAllSquares() }\n                </div>\n                <div className=\"PlayersPanel\">\n                    { this.renderAllPlayerButtons() }\n                </div>\n                <div className=\"ControlPanel\">\n                    <button onClick={ () => this.reset() }>Reset</button>\n                </div>\n                <Modal display={this.state.showModal}>\n                    { this.getGameStateMessage() }\n                    <br /><br />\n                    <button onClick={ () => this.setState({ showModal: false }) }>Ok</button>\n                    <button onClick={ () => {\n                                this.setState({ showModal: false });\n                                this.reset();\n                            }}>\n                        Reset\n                    </button>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport Custom from './Custom/Custom';\nimport Game from './Game/Game';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const url = new URL(window.location);\n        this.page = url.searchParams.get(\"p\");\n        this.rows = url.searchParams.get(\"rows\") || 3;\n        this.cols = url.searchParams.get(\"cols\") || 3;\n        this.sequence = url.searchParams.get(\"seq\") || 3;\n        this.players = url.searchParams.get(\"players\");\n    }\n    render () {\n        switch(this.page) {\n            case \"game\":\n                return (\n                    <div className=\"App\">\n                        <Header />\n                        <Game rows={this.rows} cols={this.cols} sequence={this.sequence} players={this.players} />\n                    </div>\n                );\n            case \"custom\":\n                return (\n                    <div className=\"App\">\n                        <Header />\n                        <Custom />\n                    </div>\n                );\n            default:\n                return (\n                    <div className=\"App\">\n                        <Header />\n                        <Home />\n                    </div>\n                );\n        }\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}